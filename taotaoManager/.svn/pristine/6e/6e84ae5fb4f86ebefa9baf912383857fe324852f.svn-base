package com.taotao.service;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.github.pagehelper.PageHelper;
import com.github.pagehelper.PageInfo;
import com.taotao.commons.EUdatePage;
import com.taotao.commons.TaotaoResult;
import com.taotao.commons.TreeNode;
import com.taotao.mapper.TbContentCategoryMapper;
import com.taotao.mapper.TbContentMapper;
import com.taotao.pojo.TbContent;
import com.taotao.pojo.TbContentCategory;
import com.taotao.pojo.TbContentCategoryExample;
import com.taotao.pojo.TbContentCategoryExample.Criteria;
import com.taotao.pojo.TbContentExample;

@Service
public class contentCateServiceImpl implements contentCateService {
    
	@Autowired
	private TbContentCategoryMapper tbContentCategoryMapper;
	
	@Autowired
	private TbContentMapper tbContentMapper;
	
	@Override
	public List<TreeNode> getContentCatList(long parentId) {
	    TbContentCategoryExample example=new TbContentCategoryExample();
	    Criteria criteria=example.createCriteria();
	    criteria.andParentIdEqualTo(parentId);
	    List<TbContentCategory> list=tbContentCategoryMapper.selectByExample(example);
	    
	    List<TreeNode> resultlist=new ArrayList<>();
	    for (TbContentCategory category:list) {
		      TreeNode node=new TreeNode();
		      node.setId(category.getId());
		      node.setText(category.getName());
		      node.setState(category.getIsParent()?"closed":"open");
		      resultlist.add(node);
		}
		return resultlist;
	}

	@Override
	public TaotaoResult createContentCat(long parentId, String name) {
		//对象
		TbContentCategory tbContentCategory=new TbContentCategory();
		tbContentCategory.setName(name);
		tbContentCategory.setIsParent(false);
		tbContentCategory.setParentId(parentId);
		tbContentCategory.setStatus(1);
		tbContentCategory.setSortOrder(1);
		tbContentCategory.setCreated(new Date());
		tbContentCategory.setUpdated(new Date());
		//更新
		tbContentCategoryMapper.insert(tbContentCategory);
		//检查父节点
		TbContentCategory parentCategory =tbContentCategoryMapper.selectByPrimaryKey(parentId);
		if (!parentCategory.getIsParent()) {
			parentCategory.setIsParent(true);
			tbContentCategoryMapper.updateByPrimaryKey(parentCategory);
			
		}
		return TaotaoResult.ok(tbContentCategory);
	}

	@Override
	public TaotaoResult removeContentCat(long id) {
		tbContentCategoryMapper.deleteByPrimaryKey(id);
		
		return TaotaoResult.ok();
	}

	@Override
	public TaotaoResult updateContentCat(long id, String name) {
		TbContentCategory tbContentCategory=
				tbContentCategoryMapper.selectByPrimaryKey(id);
		tbContentCategory.setName(name);
		tbContentCategoryMapper.updateByPrimaryKey(tbContentCategory);
		return TaotaoResult.ok();
	}

	@Override
	public EUdatePage getContentCatsList(long id,int page, int rows) {
	    TbContentExample example=new TbContentExample();
	    com.taotao.pojo.TbContentExample.Criteria criteria=example.createCriteria();
	    criteria.andCategoryIdEqualTo(id);
		List<TbContent> list=tbContentMapper.selectByExample(example);
		
        // 分页处理
		PageHelper.startPage(page, rows);
		// 查询
		EUdatePage result = new EUdatePage();
		result.setRows(list);
		// 取值
		PageInfo<TbContent> pageInfo = new PageInfo<>(list);
		result.setTotal((int) pageInfo.getTotal());
		return result;
	}

}
