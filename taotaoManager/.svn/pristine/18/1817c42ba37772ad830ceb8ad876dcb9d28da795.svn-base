package com.taotao.service;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.joda.time.DateTime;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import com.github.pagehelper.PageHelper;
import com.github.pagehelper.PageInfo;
import com.taotao.commons.EUdatePage;
import com.taotao.commons.TaotaoResult;
import com.taotao.commons.TreeNode;
import com.taotao.commons.ftp.FtpUtil;
import com.taotao.commons.ftp.IDUtils;
import com.taotao.mapper.TbItemCatMapper;
import com.taotao.mapper.TbItemMapper;
import com.taotao.pojo.TbItem;
import com.taotao.pojo.TbItemCat;
import com.taotao.pojo.TbItemCatExample;
import com.taotao.pojo.TbItemCatExample.Criteria;
import com.taotao.pojo.TbItemExample;

@Service
public class showItemImpl implements showItem{
	
	
	
    @Autowired
    private TbItemMapper tbItemMapper;
    
    @Autowired
    private TbItemCatMapper tbItemCatMapper;
    
    //选择
	public TbItem select(long tbitemId) {
		return tbItemMapper.selectByPrimaryKey(tbitemId);
	}
	
	
    //分页
	@Override
	public EUdatePage getsEUdatePage(int page, int rows) {
		TbItemExample example=new TbItemExample();
		//分页处理
		PageHelper.startPage(page, rows);
		//查询
		List<TbItem> list=tbItemMapper.selectByExample(example);
		EUdatePage result=new EUdatePage();
		result.setRows(list);
		//取值
		PageInfo<TbItem> pageInfo=new PageInfo<>(list);
		result.setTotal((int) pageInfo.getTotal());
		return result;
	}
	
	//添加的一个tree图
	@Override
	public List<TreeNode> getItemsList(long id) {
		TbItemCatExample example=new TbItemCatExample();
		//设置查询的条件
		Criteria criteria=example.createCriteria();
		criteria.andParentIdEqualTo(id);
		//执行查询
		List<TbItemCat> list=tbItemCatMapper.selectByExample(example);
		//转换成treenode可用列表
		List<TreeNode> result=new ArrayList<>();
		for (TbItemCat tbItemCat:list) {
			TreeNode treeNode=new TreeNode(tbItemCat.getId(),tbItemCat.getName(),
					tbItemCat.getIsParent()?"closed":"open");
			result.add(treeNode);
		}
		
		return result;
	}

    //提交上架商品
	@Override
	public TaotaoResult insertItem(TbItem item) {
		//补全数据库内容
		Long itemId=IDUtils.genItemId();
		item.setId(itemId);
		item.setStatus((byte) 1);
		item.setCreated(new Date());
		item.setUpdated(new Date());
		//提交数据库
		tbItemMapper.insert(item);
		return TaotaoResult.ok();
	}
	
   
}
